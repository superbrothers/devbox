#!/usr/bin/env bash

set -e -o pipefail; [[ -n "$DEBUG" ]] && set -x

DEVBOX_HOME="${DEVBOX_HOME:-/home/dev}"
if [[ ! -d "$DEVBOX_HOME" ]]; then
    echo "Could not find $DEVBOX_HOME, so now creating..."
    sudo mkdir -p "$DEVBOX_HOME/.devbox"
    sudo chown 1000:1000 -r "$DEVBOX_HOME"
fi

# container name
name="devbox-${1:-default}"

# start ssh-agent if not started
export SSH_AUTH_SOCK="$DEVBOX_HOME/.devbox/ssh-agent.sock"
if ! ssh-add -l >/dev/null 2>&1; then
    rm -f "$SSH_AUTH_SOCK"
    eval "$(ssh-agent -s -a "$SSH_AUTH_SOCK")" >/dev/null
    echo "Add ssh private keys to the ssh-agent"
    ssh-add ||:
fi

case "$(docker inspect "$name" 2>/dev/null | jq -r ".[].State.Status")" in
    running )
        # noop
        ;;
    exited )
        # restart the exited container
        docker start "$name" 2>&1 >/dev/null
        ;;
    * )
        # create a new container
        docker run \
            --name "$name" \
            -d \
            --init \
            -e SSH_AUTH_SOCK \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "${DEVBOX_HOME}:${DEVBOX_HOME}" \
            -v "${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}" \
            -w "$DEVBOX_HOME" \
            --net host \
            superbrothers/devbox \
            tail -f /dev/null 2>&1 >/dev/null
        ;;
esac

# Enter the devbox container
exec docker exec \
    -it \
    -w /home/dev \
    "$name" \
    /bin/bash --login
